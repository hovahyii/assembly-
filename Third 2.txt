segment .data 
msg11 db "Hai Man Can you give me a number  ", 0xA
len11 equ $- msg11

msg12 db 0xA,"Hi You entered the first number as  ", 0xA
len12 equ $- msg12


msg21 db 0xA,"Hai Man Can you give me another number  ", 0xA
len21 equ $- msg21

msg22 db 0xA,"You entered the second number as  ", 0xA
len22 equ $- msg22

segment .bss
num1 resb 2
num2 resb 2

section .text 

global _start ;must be declared for using gcc 
_start: ;tell linker entry point 

mov edx,len11 ;message length 
mov ecx,msg11 ;message to write 
mov ebx,1 ;file descriptor (stdout) 
mov eax,4 ;system call number (sys_write) 
int 0x80 ;call kernel

mov eax, 3
mov ebx, 0 
mov ecx, num1 
mov edx, 2 
int 0x80 

mov edx,len21 ;message length 
mov ecx,msg21 ;message to write 
mov ebx,1 ;file descriptor (stdout) 
mov eax,4 ;system call number (sys_write) 
int 0x80 ;call kernel

mov eax, 3
mov ebx, 0 
mov ecx, num2 
mov edx, 2 
int 0x80 

;mov edx,len12 ;message length 
;mov ecx,msg12 ;message to write 
;mov ebx,1 ;file descriptor (stdout) 
;mov eax,4 ;system call number (sys_write) 
;int 0x80 ;call kernel

mov eax, 4
mov ebx, 1 
mov ecx, num1
mov edx, 2 
int 0x80 

mov edx,len22 ;message length 
mov ecx,msg22 ;message to write 
mov ebx,1 ;file descriptor (stdout) 
mov eax,4 ;system call number (sys_write) 
int 0x80 ;call kernel

mov eax, 4
mov ebx, 1 
mov ecx, num2
mov edx, 2 
int 0x80 


mov eax, 1
int 0x80